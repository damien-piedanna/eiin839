//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AuthentifiedAccess.ServiceAccess {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceAccess.IServiceAccess")]
    public interface IServiceAccess {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceAccess/GetWeather", ReplyAction="http://tempuri.org/IServiceAccess/GetWeatherResponse")]
        string GetWeather(string city);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceAccess/GetWeather", ReplyAction="http://tempuri.org/IServiceAccess/GetWeatherResponse")]
        System.Threading.Tasks.Task<string> GetWeatherAsync(string city);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceAccessChannel : AuthentifiedAccess.ServiceAccess.IServiceAccess, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceAccessClient : System.ServiceModel.ClientBase<AuthentifiedAccess.ServiceAccess.IServiceAccess>, AuthentifiedAccess.ServiceAccess.IServiceAccess {
        
        public ServiceAccessClient() {
        }
        
        public ServiceAccessClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceAccessClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceAccessClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceAccessClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetWeather(string city) {
            return base.Channel.GetWeather(city);
        }
        
        public System.Threading.Tasks.Task<string> GetWeatherAsync(string city) {
            return base.Channel.GetWeatherAsync(city);
        }
    }
}
